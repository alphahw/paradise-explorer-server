type Address {
  address: String!
  countries: String!
  country_codes: String!
  entitiesregisteredAddress: [Entity!]! @relationship(type: "registered_address", direction: IN, properties: "RegisteredAddressProperties")
  name: String!
  node_id: String!
  note: String!
  sourceID: String!
  valid_until: String!
}

interface ConnectedToProperties @relationshipProperties {
  end_date: String!
  link: String!
  sourceID: String!
  start_date: String!
  valid_until: String!
}

type Entity {
  closed_date: String!
  company_type: String!
  countries: String!
  country_codes: String!
  entitiesofficerOf: [Entity!]! @relationship(type: "officer_of", direction: IN, properties: "OfficerOfProperties")
  entitiessameNameAs: [Entity!]! @relationship(type: "same_name_as", direction: IN, properties: "SameNameAsProperties")
  ibcRUC: String!
  inactivation_date: String!
  incorporation_date: String!
  intermediariesconnectedTo: [Intermediary!]! @relationship(type: "connected_to", direction: IN, properties: "ConnectedToProperties")
  intermediariesintermediaryOf: [Intermediary!]! @relationship(type: "intermediary_of", direction: IN, properties: "IntermediaryOfProperties")
  intermediariessameNameAs: [Intermediary!]! @relationship(type: "same_name_as", direction: IN, properties: "SameNameAsProperties")
  jurisdiction: String!
  jurisdiction_description: String!
  name: String!
  node_id: String!
  note: String!
  officerOfEntities: [Entity!]! @relationship(type: "officer_of", direction: OUT, properties: "OfficerOfProperties")
  officersconnectedTo: [Officer!]! @relationship(type: "connected_to", direction: IN, properties: "ConnectedToProperties")
  officersofficerOf: [Officer!]! @relationship(type: "officer_of", direction: IN, properties: "OfficerOfProperties")
  othersconnectedTo: [Other!]! @relationship(type: "connected_to", direction: IN, properties: "ConnectedToProperties")
  otherssameNameAs: [Other!]! @relationship(type: "same_name_as", direction: IN, properties: "SameNameAsProperties")
  registeredAddressAddresses: [Address!]! @relationship(type: "registered_address", direction: OUT, properties: "RegisteredAddressProperties")
  sameNameAsEntities: [Entity!]! @relationship(type: "same_name_as", direction: OUT, properties: "SameNameAsProperties")
  sameNameAsOfficers: [Officer!]! @relationship(type: "same_name_as", direction: OUT, properties: "SameNameAsProperties")
  sameNameAsOthers: [Other!]! @relationship(type: "same_name_as", direction: OUT, properties: "SameNameAsProperties")
  service_provider: String!
  sourceID: String!
  status: String!
  struck_off_date: String!
  valid_until: String!
}

type Intermediary {
  connectedToEntities: [Entity!]! @relationship(type: "connected_to", direction: OUT, properties: "ConnectedToProperties")
  countries: String!
  country_codes: String!
  intermediaryOfEntities: [Entity!]! @relationship(type: "intermediary_of", direction: OUT, properties: "IntermediaryOfProperties")
  name: String!
  node_id: String!
  note: String!
  sameAsOfficers: [Officer!]! @relationship(type: "same_as", direction: OUT, properties: "SameAsProperties")
  sameNameAsEntities: [Entity!]! @relationship(type: "same_name_as", direction: OUT, properties: "SameNameAsProperties")
  sourceID: String!
  valid_until: String!
}

interface IntermediaryOfProperties @relationshipProperties {
  end_date: String!
  link: String!
  sourceID: String!
  start_date: String!
  valid_until: String!
}

type Officer {
  connectedToEntities: [Entity!]! @relationship(type: "connected_to", direction: OUT, properties: "ConnectedToProperties")
  countries: String!
  country_codes: String!
  entitiessameNameAs: [Entity!]! @relationship(type: "same_name_as", direction: IN, properties: "SameNameAsProperties")
  intermediariessameAs: [Intermediary!]! @relationship(type: "same_as", direction: IN, properties: "SameAsProperties")
  name: String!
  node_id: String!
  note: String!
  officerOfEntities: [Entity!]! @relationship(type: "officer_of", direction: OUT, properties: "OfficerOfProperties")
  officerssameIdAs: [Officer!]! @relationship(type: "same_id_as", direction: IN, properties: "SameIdAsProperties")
  officerssameNameAs: [Officer!]! @relationship(type: "same_name_as", direction: IN, properties: "SameNameAsProperties")
  otherssameNameAs: [Other!]! @relationship(type: "same_name_as", direction: IN, properties: "SameNameAsProperties")
  sameIdAsOfficers: [Officer!]! @relationship(type: "same_id_as", direction: OUT, properties: "SameIdAsProperties")
  sameNameAsOfficers: [Officer!]! @relationship(type: "same_name_as", direction: OUT, properties: "SameNameAsProperties")
  sourceID: String!
  status: String!
  valid_until: String!
}

interface OfficerOfProperties @relationshipProperties {
  end_date: String!
  link: String!
  sourceID: String!
  start_date: String!
  valid_until: String!
}

type Other {
  connectedToEntities: [Entity!]! @relationship(type: "connected_to", direction: OUT, properties: "ConnectedToProperties")
  countries: String!
  country_codes: String!
  entitiessameNameAs: [Entity!]! @relationship(type: "same_name_as", direction: IN, properties: "SameNameAsProperties")
  name: String!
  node_id: String!
  note: String!
  sameNameAsEntities: [Entity!]! @relationship(type: "same_name_as", direction: OUT, properties: "SameNameAsProperties")
  sameNameAsOfficers: [Officer!]! @relationship(type: "same_name_as", direction: OUT, properties: "SameNameAsProperties")
  sourceID: String!
  valid_until: String!
}

interface RegisteredAddressProperties @relationshipProperties {
  end_date: String!
  link: String!
  sourceID: String!
  start_date: String!
  valid_until: String!
}

interface SameAsProperties @relationshipProperties {
  end_date: String!
  link: String!
  sourceID: String!
  start_date: String!
  valid_until: String!
}

interface SameIdAsProperties @relationshipProperties {
  end_date: String!
  link: String!
  sourceID: String!
  start_date: String!
  valid_until: String!
}

interface SameNameAsProperties @relationshipProperties {
  end_date: String!
  link: String!
  sourceID: String!
  start_date: String!
  valid_until: String!
}